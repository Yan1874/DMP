package cn.label

import cn.util.{AmapUtil, LabelUtil}
import org.apache.commons.lang3.{StringEscapeUtils, StringUtils}
import org.apache.spark.sql.{DataFrame, SparkSession}

import scala.collection.mutable

object test {
  def main(args: Array[String]): Unit = {
    val sparkSession = SparkSession
      .builder()
      .appName("APP")
      .master("local[*]")
      .config("spark.serializer","org.apache.spark.serializer.KryoSerializer")
      .getOrCreate()

    val df: DataFrame = sparkSession.read.parquet("E:\\DMPData\\output")

    val res1 = df.rdd.map(row => {
      val long = row.getAs[String]("long")
      val lat = row.getAs[String]("lat")
        (long,lat)
    })

    println(res1)
    //ArrayBuffer((114.055,22.5075), (113.67993456875958,22.816694113004054), (112.717828,36.726411), (126.998226,46.637846), (114.709872,22.97642), (109.127,21.4765), (124.46281116869623,47.77228597345151), (119.986504,31.775515), (120.114552,30.317142), (114.67,33.6137), (115.227143,37.902899), (112.80061166666668,34.97188666666667), (110.8585442224459,19.595845083335252), (119.5865,33.00377), (117.207047,39.151473), (116.751372,36.803008), (113.005,28.23478), (114.292057,34.827007), (120.956892,30.913946), (113.7763,23.56526), (119.0957,36.69801), (121.271279,31.239024), (113.0571,33.86023), (116.259271,26.436796), (109.604294,27.953412), (124.884978,46.566304), (128.254104,43.350388), (113.10355,23.107601), (114.512382,32.196924), (115.360049,22.763388), (112.94768409,28.19966462), (116.605,40.1948), (114.118662,30.553739), (125.236027,49.179112), (114.314988,38.08699), (114.512382,32.196924), (113.510168,37.897239), (124.884978,46.566304), (120.451035,31.91859), (111.430439,29.096126), (108.984,34.3791), (111.588,29.6589), (114.9387,25.85673), (117.7852,24.67594), (114.654,36.1078), (119.913,28.4434), (120.963500,31.970711), (116.639253,28.251998), (121.314459,37.516657), (115.783019,36.115565), (116.897,32.0052), (109.917,40.6044), (120.38953098437922,28.902353502031954), (112.727,38.4227), (130.905535,45.21386833333333), (118.62685,36.589736), (117.679,37.5064), (111.708375,26.815747), (126.046745,42.943215), (105.310132,29.446385), (114.2988,22.7735), (1.0,1.0), (106.328292,38.964318), (120.451035,31.91859), (106.222092,33.238631), (116.646559,32.756154), (116.629735,40.33101), (108.387516,29.711934), (117.7143,39.04848), (121.577,29.7535), (108.933653,23.18052), (119.583028,39.950519), (117.683395,36.210852), (103.99999999999999,30.000000000000004), (130.905535,45.21386833333333), (114.1742117,30.39697414), (120.412,31.8088), (120.2086,30.61455), (130.259704,44.522864), (117.183401,39.146975), (114.578,36.756), (116.688672,36.886422), (130.723014,47.008052), (118.49407,34.51073), (1.0,1.0), (115.44567,38.890013), (105.983367,34.116532), (116.495,36.2382), (120.102844,33.427670), (115.759179,30.621573), (106.7706,31.857854), (118.197178,39.23527), (118.782808,32.030347), (103.862219,36.04067), (130.723014,47.008052), (104.94254487,31.40986771), (79.35445,40.02649), (117.01427,39.37936666666667), (118.54659722222222,32.987430555555555), (117.967929,39.634313), (115.227143,37.902899), (103.862219,36.04067), (113.32409,23.145741), (116.09945476055145,36.58822238445282), (117.014727,39.379616), (122.4269,40.36684), (130.905535,45.21386833333333), (118.24359,26.549492), (116.783922,43.057088), (119.08973333333333,36.71129333333333), (101.73399,26.595707), (113.52,35.2639), (106.328292,38.964318), (114.352,22.7277), (115.44567,38.890013), (113.818,23.2855), (108.291772,28.887665), (110.85290908813477,34.6936172246933), (121.415777,31.333218), (109.14,29.6804), (120.374261,36.121765), (120.656,41.8497), (112.717828,36.726411), (102.768,24.9856), (117.527385,36.685164), (104.089947,30.61151), (124.80964,45.181841), (130.259704,44.522864), (116.134345,38.714391), (118.779415,36.853305), (115.76897794,36.22943532), (112.568087,26.593394), (120.374261,36.121765), (113.6288,23.3628), (126.954237,44.408453), (117.507986,38.720332), (117.721783,35.908403), (118.18456,39.689938), (121.264,30.0294), (112.8341,28.3493), (104.115,30.285), (117.507986,38.720332), (103.224889,26.306540), (115.722359,37.525673), (117.828,34.8698), (130.836331,45.350111), (116.88076666666666,29.35402), (1.0,1.0), (112.717828,36.726411))
//  val map = new mutable.HashMap[String,Int]()
//    LabelUtil.businessLb("113.67993456875958","22.816694113004054",map)
//    println(map)

  }
}
